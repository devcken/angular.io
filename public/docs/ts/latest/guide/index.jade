block includes
  include ../_util-fns

// #docregion intro
- var langName = current.path[1] == 'ts' ? 'TypeScript' : 'JavaScript'
figure
  img(src="/resources/images/devguide/intro/people.png" alt="Us" align="left" style="width:200px; margin-left:-40px;margin-right:10px" )
:marked
  이 문서는 HTML과 #{langName}으로 클라이언트 애플리케이션을 만드는 숙달된 개발자를 위한 Angular에 대한 실용적인 가이드입니다.

  Angular가 어떻게 동작하는지, 더 중요하게는, 그것이 동작하도록 만든 방법을 이용하기 위해 함께 여행을 떠날 것입니다.
  이제 여행을 시작합니다.
  <br clear="all">
// #enddocregion intro

// #docregion how-to-read-1
<a id="learning-path"></a>
:marked
  # 편성

  이 문서는 주요 주제에 집중하는 챕터들의 컬렉션인 섹션으로 나누어져 있습니다.
// #enddocregion how-to-read-1
// #docregion how-to-read-2
- var top="vertical-align:top"
table(width="100%")
  col(width="15%")
  col
  tr(style=top)
    td <b>퀵스타트</b>
    td
      :marked
        이 문서 내의 모든 챕터에 대한 기본적인 내용 그리고 샘플
  tr(style=top)
    td <b>튜토리얼</b>
    td
      :marked
        애플리케이션 제작 과정의 흐름에 따라 Angular의 주요 기능들을 소개하는 Angular 학습에 대한 단계적이고 실습적인 접근법
  tr(style=top)
    td <b>기초</b>
    td
      :marked
        Angular 개발에 있어 필수적이고 중요한 요소들
  tr(style=top)
    td <b>개발자 가이드</b>
    td
      :marked
        Angular 기능에 대한 면밀한 분석과 개발 프랙티스
  tr(style=top)
    td <b>쿡북</b>
    td
      :marked
        최소한의 설명을 곁들여 대부분 코드 스니펫인 특정 애플리케이션 문제에 대한 레시피
  tr(style=top)
    td <b>API 레퍼런스</b>
    td
      :marked
        Angular 라이브러리의 각각의 멤버들에 대한 정식 세부내용
:marked
  # 학습 경로
  이 가이드를 곧장 쭉 읽어서는 안됩니다. 대부분의 챕터들은 독립적이죠.

  Angular를 처음 공부하는 이들을 위해 다음의 학습 경로를 추천합니다.
  대부분의 경로는 *기초* 섹션을 통해 진행합니다:

  1. 큰 그림을 그리기 위해 [구조](architecture.html) 개요를 읽도록 합니다.

  1. [퀵스타트](../quickstart.html)를 읽습니다. 퀵스타트는 Angular 2의 "Hello, World"입니다.
  *어떤* Angular 앱을 작성하든지 필요로 하는 라이브러리와 도구들을 설치하는 방법을 알려줍니다. 

  1. 퀵스타트가 끝난 지점으로부터 간단한 데이터-주도 앱을 만들어보는 *Tour of Heroes* [튜토리얼](../tutorial)을 진행합니다.
  간단해요, 네, 그러나 필수적인 특성들은 전문가 애플리케이션에서도 기대되는 부분입니다:
  실용적인 프로젝트 구조, 데이터 바인딩, 마스터/디테일, 서비스, 의존성 주입, 네비게이션 그리고 원격 데이터 접근까지.

    *기초* 섹션으로 돌아가 제안된 순서대로 계속 하사기 바랍니다:

  1. [데이터 디스플레이](displaying-data.html)는 스크린에 정보를 나타내는 방법에 대해 설명합니다.

  1. [사용 입력](user-input.html)은 사용자 행위와 관련한 기초적인 내용을 다룹니다.

  1. [폼](forms.html)은 사용자 데이터 엔트리 그리고 UI 간의 유효성을 다룹니다.

  1. [의존성 주입](dependency-injection.html)은 작고 단일 목적의 부분들로부터 크고 유지보수 가능한 애플리케이션을 빌드하는 방법입니다.

  1. [템프릿 문법](template-syntax.html)은 Angular 템플릿 HTML에 대한 포괄적인 학습입니다.

  이 기본 내용들로, 이 가이드 내 어떤 챕터든지 읽고 이해할 수 있을 겁니다.
// #enddocregion how-to-read-2
// #docregion the-rest
:marked
  # 코드 샘플

  모든 챕터는 우리의 애플리케이션에서 재사용할 수 있는 코드 스니펫들을 포함합니다.
  이 스니펫들은 챕터에 수반되는 샘플 애플리케이션에서 발췌된 것입니다.

block example-links
  :marked
    [구조](architecture.html) 챕터의 [라이브 예제](/resources/live-examples/architecture/ts/plnkr.html)처럼
    각 페이지의 상단 근처의 샘플에 대한 실행 버전으로 갈 수 있는 링크를 확인하세요.

    해당 링크는 우리가 코드를 조사하고 수정하고 저장하며 다운로드할 수 있는 브라우저 기반의 코드 에디터를 열어줍니다.

:marked
  이에 앞선 몇몇 챕터들은 튜토리얼로써 작성되었고 분명히 그렇게 표기해두었습니다.
  대부분의 챕터들은 튜토리얼이 *아닙니다*.
  그들은 샘플을 빌드하기 위해 필요로 하는 각 단계에 대해 설명하기 보다는 코드 내의 핵심 사항들을 조명합니다.
  항상 #{_liveLink}을 이용해 전체 소스를 얻을 수 있습니다.

  # 레퍼런스 페이지

  [치트 시트](cheatsheet.html)는 일반적인 시나리오에 대한 Angular 문법을 나열합니다.

  [Glossary](glossary.html)는 Angular 개발자가 알아야 하는 용어들을 정의합니다.

  [API 레퍼런스](../api/)는 Angular 라이브러리의 모든 public 멤버에 대한 저작물입니다.

  # 피드백

  우리는 피드백을 환영합니다! 배너의 오른쪽 상단 코너의 아이콘을 클릭하여 코멘트를 남겨주시기 바랍니다.

  *문서* 이슈를 포스트해주시고 [angular.io](https://github.com/angular/angular.io) github 저장소에서 pull requests해주시기 바랍니다.

  *Angular2 자체*에 대한 이슈는 [angular](https://github.com/angular/angular) github 저장소에 포스트해주시기 바랍니다.
// #enddocregion the-rest
